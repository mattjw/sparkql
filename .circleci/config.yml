version: "2.1"


workflows:
  version: "2.1"

  pipeline:
    description: |
      Complete project pipeline.
      All branches: build and verify (test).
      Master branch: Additionally, on manual approval, bump version and publish a release.

    jobs:
      #
      # Testing (all branches)
      - build_verify

      #
      # Release pipeline, with manual approval (master only)
      - request_release:
          type: approval
          requires:
            - build_verify
          filters:
            branches:
              only: master
      - release:
          requires:
            - request_release
          filters:
            branches:
              only: master


jobs:

  build_verify:
    description: "Build project and run all tests and checks."

    docker:
      - image: docker.pkg.github.com/mattjw/docker-images/circleci-python-java8:py3.6.8
        auth:
          username: ${GITHUB_USERNAME}
          password: ${GITHUB_DOCKER_READ_TOKEN}
        # This is a public image (via Github Packages), so shouldn't need auth, but Github Packages does not yet
        # support authless read from public images.
        # https://github.community/t5/GitHub-Actions/docker-pull-from-public-GitHub-Package-Registry-fail-with-quot/td-p/32782

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache deps
      - restore_cache:
          keys:
            - dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}

      # Install deps
      - run:
          name: Install dependencies
          command: |
            poetry --version
            poetry install --no-root

      # Save deps
      - save_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/project/.poetry/virtualenvs

      # Run all checks
      - run:
          name: Run tests
          command: |
            poetry run verify-all


  release:
    # Notes...
    # - Requires a Github Personal Access Token as env var `GITHUB_WRITE_TOKEN`. Must have `repo` scope
    # - The PAT is treated as Administrator. Suggested master branch protection rules as follows:
    #     Require status checks to pass before merging = yes;
    #     Require branches to be up to date before merging = yes;
    #     Status checks = ci/circleci: build_verify (exclusively);
    #     Include administrators = no
    #   Exempting administrators will allow CircleCI (via the PAT) to push to master as part of a release.
    description: "Bump and release package to PyPI"
    docker:
      - image: docker.pkg.github.com/mattjw/docker-images/circleci-python-java8:py3.6.8
        auth:
          username: ${GITHUB_USERNAME}
          password: ${GITHUB_DOCKER_READ_TOKEN}
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            poetry --version
            poetry install --no-root
      - run:
          name: Ensure there are releasable changes
          command: |
            result=$(poetry run find-releasable-changes)
            echo "${result}"
            if [[ ${result} == *"No changes to release"* ]]; then
              echo "Ending CircleCI job here"
              circleci-agent step halt
            fi
      - run:
          name: Push to PyPI
          command: |
            poetry run prepare-release
            poetry publish --build --username "${PYPI_USERNAME}" --password "${PYPI_TOKEN}" --no-interaction
